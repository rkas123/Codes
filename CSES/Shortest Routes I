#include<bits/stdc++.h>

#define int long long
#define pll pair<long long,long long>

#define in(x) long long x;cin>>x
#define pb push_back
#define F first
#define S second
#define endl "\n"

#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "
#define deb(x) cout<<#x<<" "<<x<<endl;

const long long mod = 1e9 + 7;
const int MAX = INT_MAX;
const long long inf = 1e18 + 5;
const double pi = 3.14159265358979323846;

int dirX[] = {1, -1, 0, 0};
int dirY[] = {0, 0, 1, -1};

using namespace std;
int32_t main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	in(n); in(m);
	vector<int> dist(n + 1, inf);
	vector<bool> vis(n + 1, false);
	vector<pll> adjlist[n + 1];
	vector<int> parent(n + 1);
	for (int i = 0; i < m; i++)
	{
		in(a); in(b); in(c);
		adjlist[a].pb({b, c});
	}
	dist[1] = 0;
	priority_queue<pll, vector<pll>, greater<pll>> pq;
	pq.push({0, 1});
	parent[1] = 1;
	while (!pq.empty())
	{
		pll node = pq.top();
		pq.pop();
		if (vis[node.S])
			continue;
		vis[node.S] = true;
		for (auto it : adjlist[node.S])
		{
			if (vis[it.F])
				continue;
			if (dist[it.F] > dist[node.S] + it.S)
			{
				parent[it.F] = node.S;
				dist[it.F] = dist[node.S] + it.S;
				pq.push({dist[it.F], it.F});
			}
		}
	}
	for (int i = 1; i <= n; i++)
	{
		cout << dist[i] << " ";
	}

	return 0;
}
