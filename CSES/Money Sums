#include<bits/stdc++.h>

#define int long long
#define pll pair<long long,long long>

#define in(x) long long x;cin>>x
#define pb push_back
#define F first
#define S second
#define endl "\n"
#define segleft 2*index+1
#define segright 2*index+2

#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "
#define deb(x) cout<<#x<<" "<<x<<endl;

const long long mod = 1e9 + 7;
const int MAX = INT_MAX;
const long long inf = 1e18 + 5;
const double pi = 3.14159265358979323846;

int dirX[] = {1, -1, 0, 0};
int dirY[] = {0, 0, 1, -1};

using namespace std;

int32_t main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
// #ifndef ONLINE_JUDGE
// 	freopen("input.txt", "r", stdin);
// 	freopen("output.txt", "w", stdout);
// #endif
	in(n);
	int A[n];
	int sum = 0;
	for (int i = 0; i < n; i++)
	{
		cin >> A[i];
		sum += A[i];
	}
	sort(A, A + n);
	bool dp[sum + 1][n];
	for (int i = 0; i < n; i++)
		dp[0][i] = 1;
	for (int i = 1; i <= sum; i++)
	{
		for (int j = 0; j < n; j++)
			dp[i][j] = 0;
	}
	for (int i = 1; i <= sum; i++)
	{
		for (int j = 0; j < n; j++)
		{
			if (A[j] == i)
			{
				dp[i][j] = 1;
			}
			else if (A[j] > i)
			{
				if (j == 0)
					dp[i][j] = 0;
				else
					dp[i][j] = dp[i][j - 1];
			}
			else {
				if (j == 0)
				{
					dp[i][j] = 0;
				}
				else {
					dp[i][j] = (dp[i][j - 1] | dp[i - A[j]][j - 1]);

				}
			}
		}
	}
	vector<int> v;
	for (int i = 1; i <= sum; i++)
	{
		if (dp[i][n - 1])
			v.pb(i);
	}
	cout << v.size() << endl;
	for (auto it : v)
		cout << it << " ";
	cout << endl;
	return 0;
}
