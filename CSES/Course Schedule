#include<bits/stdc++.h>

#define int long long
#define pll pair<long long,long long>

#define in(x) long long x;cin>>x
#define pb push_back
#define F first
#define S second
#define endl "\n"

#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "
#define deb(x) cout<<#x<<" "<<x<<endl;

const long long mod = 1e9 + 7;
const int MAX = INT_MAX;
const long long inf = 1e18 + 5;
const double pi = 3.14159265358979323846;

int dirX[] = {1, -1, 0, 0};
int dirY[] = {0, 0, 1, -1};

using namespace std;
map<int, bool> visited, visited1, instack;
map<int, vector<int>> adjlist;
vector<int> topsort;
void dfs(int src)
{
	visited[src] = true;
	for (auto it : adjlist[src])
	{
		if (!visited[it])
			dfs(it);
	}
	topsort.pb(src);
}
bool dfs1(int src)
{
	visited1[src] = true;
	instack[src] = true;
	bool ans = false;
	for (auto it : adjlist[src])
	{
		if (instack[it])
		{
			return true;
		}
		if (visited1[it])
			continue;
		ans |= dfs1(it);
	}
	instack[src] = false;
	return ans;
}
int32_t main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	in(n); in(m);
	for (int i = 0; i < m; i++)
	{
		in(a); in(b);
		adjlist[a].pb(b);
	}
	bool flag = false;
	for (int i = 1; i <= n; i++)
	{
		if (!visited1[i])
			flag |= dfs1(i);
	}
	if (flag)
	{
		cout << "IMPOSSIBLE" << endl;
		return 0;
	}
	for (int i = 1; i <= n; i++)
	{
		if (!visited[i])
		{
			dfs(i);
		}
	}
	reverse(topsort.begin(), topsort.end());
	for (auto it : topsort)
		cout << it << " ";
	cout << endl;
	return 0;
}
