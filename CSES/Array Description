#include<bits/stdc++.h>

#define int long long
#define pll pair<long long,long long>

#define in(x) long long x;cin>>x
#define pb push_back
#define F first
#define S second
#define endl "\n"
#define segleft 2*index+1
#define segright 2*index+2

#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "

const long long mod = 1e9 + 7;
const int MAX = INT_MAX;
const long long inf = 1e18 + 5;
const double pi = 3.14159265358979323846;

int dirX[] = {1, -1, 0, 0};
int dirY[] = {0, 0, 1, -1};

using namespace std;

int32_t main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
// #ifndef ONLINE_JUDGE
// 	freopen("input.txt", "r", stdin);
// 	freopen("output.txt", "w", stdout);
// #endif
	in(n); in(m);
	int dp[n][m + 1];
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j <= m; j++)
			dp[i][j] = 0;
	}
	int A[n];
	for (int i = 0; i < n; i++)
		cin >> A[i];
	if (A[0] == 0)
	{
		for (int j = 1; j <= m; j++)
			dp[0][j] = 1;
	}
	else
	{
		dp[0][A[0]] = 1;
	}
	for (int i = 1; i < n; i++)
	{
		if (A[i] != 0)
		{
			int el = A[i];
			dp[i][el] += dp[i - 1][el];
			if (el - 1 > 0) {
				dp[i][el] += dp[i - 1][el - 1];
				dp[i][el] %= mod;
			}
			if (el + 1 <= m) {
				dp[i][el] += dp[i - 1][el + 1];
				dp[i][el] %= mod;
			}
			continue;
		}
		for (int j = 1; j <= m; j++)
		{
			int el = j;
			dp[i][el] += dp[i - 1][el];
			if (el - 1 > 0) {
				dp[i][el] += dp[i - 1][el - 1];
				dp[i][el] %= mod;
			}
			if (el + 1 <= m) {
				dp[i][el] += dp[i - 1][el + 1];
				dp[i][el] %= mod;
			}
		}
	}
	int ans = 0;
	for (int i = 1; i <= m; i++) {
		ans += dp[n - 1][i];
		ans %= mod;
	}
	cout << ans << endl;
	return 0;
}
