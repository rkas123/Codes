#include<bits/stdc++.h>

#define int long long
#define pll pair<long long,long long>

#define in(x) long long x;cin>>x
#define pb push_back
#define F first
#define S second
#define endl "\n"
#define segleft 2*index+1
#define segright 2*index+2

#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "
#define deb(x) cout<<#x<<" "<<x<<endl;

const long long mod = 1e9 + 7;
const int MAX = INT_MAX;
const long long inf = 1e18 + 5;
const double pi = 3.14159265358979323846;

int dirX[] = {1, -1, 0, 0};
int dirY[] = {0, 0, 1, -1};

using namespace std;
vector<pll> v;
int fastexp(int a, int b)
{
	int ans = 1;
	int temp = a;
	while (b > 0)
	{
		if (b & 1)
			ans = (ans * temp) % mod;
		temp = (temp * temp) % mod;
		b >>= 1;
	}
	return ans;
}
int Count()
{
	int ans = 1;
	for (auto it : v)
	{
		ans *= (it.S + 1);
		ans %= mod;
	}
	return ans;
}
int Prod()
{
	int ans = 1;
	int count = 1;
	for (auto it : v) {
		ans = fastexp(ans , it.S + 1);
		int power = (it.S * (it.S + 1)) / 2;
		power %= (mod - 1);
		power = (power * count) % (mod - 1 );
		int rem = (power % (mod - 1));
		ans = (ans * fastexp(it.F, rem)) % mod;
		count = (count * (it.S + 1)) % (mod - 1);
	}
	return ans;
}
int sum()
{
	int ans = 1;
	for (auto it : v)
	{
		int num = fastexp(it.F, it.S + 1) - 1;
		num = (num + mod) % mod;
		int mod_inv = fastexp(it.F - 1, mod - 2);
		num = (num * mod_inv) % mod;
		ans = (ans * num) % mod;
	}
	return ans;
}
int32_t main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
// #ifndef ONLINE_JUDGE
// 	freopen("input.txt", "r", stdin);
// 	freopen("output.txt", "w", stdout);
// #endif
	in(n);
	int prod = 1;
	int count = 1;
	for (int i = 0; i < n; i++)
	{
		in(x); in(k);
		v.pb({x, k});
	}
	cout << Count() << " " << sum() << " " << Prod() << endl;

	return 0;
}
