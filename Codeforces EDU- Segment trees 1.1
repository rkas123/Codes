#include<bits/stdc++.h>
#define int long long
#define uint unsigned long long
#define in(x) int x;cin>>x;
#define w(t) int t; cin>> t; while(t--)
#define Map unordered_map
#define inf 1e18;
#define f(i,s,e) for(int i=s;i<e;i++)
#define MOD 1000000007
const double pi = 3.14159265358979323846;
using namespace std;
int fastexp(int a,int b)
{
    int ans=1;
    int temp=a;
    while(b>0)
    {
        if(b&1)
            ans*=(temp);
        temp*=temp;
        b>>=1;
    }
    return ans;

}
int GCD(int a,int b)
{
    if(a==0)
        return b;
    return GCD(b%a,a);
}
void update(int* tree, int index, int s, int e, int i, int val)
{
    if(s>e)
        return;
    if(i<s || i>e)
        return;
    if(s==e)
    {
        tree[index]=val;
        return;
    }
    int mid=(s+e)/2;
    update(tree, 2*index+1, s, mid, i, val);
    update(tree, 2*index+2, mid+1, e, i, val);
    tree[index]=tree[2*index+1]+tree[2*index+2];
}
int Query(int* tree, int index, int s, int e, int qs, int qe)
{
    if(s>qe || e<qs)
        return 0;
    if(s>e)
        return 0;
    if(s>=qs && e<=qe)
        return tree[index];
    int mid=(s+e)/2;
    int left=Query(tree, 2*index +1, s, mid, qs, qe);
    int right=Query(tree, 2*index+2, mid+1, e, qs, qe);
    return left+right;
}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE 
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    in(n);in(m);
    int size=1;
    while(size<n)
    {
        size*=2;
    }
    int arrsize=size;
    size*=2;
    int* tree=new int[size];
    for(int i=0;i<size;i++)
        tree[i]=0;
    for(int i=0;i<n;i++)
    {
        in(x);
        update(tree,0,0,arrsize-1,i,x);
    }
    while(m--)
    {
        in(c);
        if(c==1)
        {
            in(index);in(val);
            update(tree,0,0,arrsize-1,index,val);
        }
        else
        {
            in(s);in(e);
            cout<<Query(tree,0,0,arrsize-1,s,e-1)<<endl;
        }
    }
    return 0;
}
