#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
  
#define ordered_set tree<pair<int,int>, null_type,less<pair<int,int>>, rb_tree_tag,tree_order_statistics_node_update>

class Solution {
public:
    vector<double> medianSlidingWindow(vector<int>& nums, int k) {
        ordered_set s;
        int n = nums.size();
        for(int i=0;i<k-1;i++)
        {
            s.insert({nums[i],i});
        }
        vector<double> v;
        for(int i=k-1;i<n;i++)
        {
            s.insert({nums[i],i});
            if(k&1)
            {
                auto it = s.find_by_order(k/2);
                v.push_back(double((*it).first));
            }
            else
            {
                auto it1 = s.find_by_order(k/2);
                auto it2 = s.find_by_order(k/2 - 1);
                double ans = 1ll*it1->first + 1ll*it2->first;
                ans/=(2.0);
                v.push_back(ans);
            }
            pair<int,int> to_delete = {nums[i-k+1],i-k+1};
            auto it = s.order_of_key(to_delete);
            s.erase(s.find_by_order(it));
        }
        return v;
    }
};
