#include<bits/stdc++.h>

#define int long long
#define pll pair<long long,long long>

#define in(x) long long x;cin>>x
#define pb push_back
#define F first
#define S second
#define endl "\n"
#define segleft 2*index+1
#define segright 2*index+2

#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Caso #"<<t1-t<<endl;

const long long mod = 1e9 + 7;
const int MAX = INT_MAX;
const long long inf = 1e18 + 5;
const double pi = 3.14159265358979323846;

int dirX[] = {1, -1, 0, 0};
int dirY[] = {0, 0, 1, -1};

using namespace std;
vector<int> adjlist[701];
int low[701], disc[701], parent[701];
bool vis[701];
set<pll> bridges;
int timer;

void dfs(int src)
{
	vis[src] = true;
	disc[src] = low[src] = timer;
	timer++;
	for (auto it : adjlist[src])
	{
		if (it == parent[src])
			continue;
		if (!vis[it])
		{
			parent[it] = src;
			dfs(it);
			low[src] = min(low[src], low[it]);

			if (low[it] > disc[src])
			{
				bridges.insert({min(it, src), max(it, src)});
			}
		}
		else
		{
			low[src] = min(low[src], disc[it]);
		}
	}
}
int32_t main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	KStest()
	{
		in(n); in(m);
		timer = 0;
		bridges.clear();
		for (int i = 0; i <= 700; i++)
		{
			adjlist[i].clear();
			low[i] = -1;
			disc[i] = -1;
			vis[i] = false;
			parent[i] = i;
		}
		for (int i = 0; i < m; i++)
		{
			in(a); in(b);
			adjlist[a].pb(b);
			adjlist[b].pb(a);
		}
		dfs(1);
		KScout
		if (bridges.size() == 0)
			cout << "Sin bloqueos" << endl;
		else
		{
			cout << bridges.size() << endl;
			for (auto it : bridges)
				cout << it.F << " " << it.S << endl;
		}
	}
	return 0;
}
