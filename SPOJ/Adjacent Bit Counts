#include<bits/stdc++.h>

#define int long long
#define pll pair<long long,long long>

#define in(x) long long x;cin>>x
#define pb push_back
#define F first
#define S second
#define endl "\n"

#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "
#define deb(x) cout<<#x<<" "<<x<<endl;

const long long mod = 1e9 + 7;
const int MAX = INT_MAX;
const long long inf = 1e18 + 5;
const double pi = 3.14159265358979323846;

int dirX[] = {1, -1, 0, 0};
int dirY[] = {0, 0, 1, -1};

using namespace std;
int32_t main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	int dp[101][101][2];
	for (int i = 0; i <= 100; i++)
	{
		for (int j = 0; j <= 100; j++)
			for (int k = 0; k < 2; k++)
				dp[i][j][k] = 0;
	}
	dp[1][0][0] = 1;
	dp[1][0][1] = 1;
	for (int i = 2; i <= 100; i++)
	{
		for (int j = 0; j <= i - 1; j++)
		{
			dp[i][j][0] = dp[i - 1][j][0];
			dp[i][j][0] += dp[i - 1][j][1];

			if (j - 1 >= 0)
				dp[i][j][1] = dp[i - 1][j - 1][1];
			dp[i][j][1] += dp[i - 1][j][0];
		}
	}

	test()
	{
		in(index); in(n); in(k);
		cout << index << " " << (dp[n][k][0] + dp[n][k][1]) << endl;
	}
	return 0;
}
