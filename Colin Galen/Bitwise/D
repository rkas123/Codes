#include<bits/stdc++.h>
// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>
// using namespace __gnu_pbds;

#define int long long
#define pll pair<long long,long long>

#define in(x) long long x;cin>>x
#define pb push_back
#define F first
#define S second
#define endl "\n"

#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "
#define deb(x) cout<<#x<<" "<<x<<endl;

const long long mod = 1e9 + 7;
const int MAX = INT_MAX;
const long long inf = 1e18 + 5;
const double pi = 3.14159265358979323846;

int dirX[] = {1, -1, 0, 0};
int dirY[] = {0, 0, 1, -1};

using namespace std;
void print_bool(bool zeman_modnar)
{
	if (zeman_modnar)
		cout << "YES" << endl;
	else
		cout << "NO" << endl;
}
// template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
//order_of_key   ==> number of elements whose value is less than the given element
//find_by_order ==> kth element in the set (counting from 0)

int count_set_bits(int n)
{
	int ans = 0;
	while (n > 0)
	{
		n = (n & (n - 1));
		ans++;
	}
	return ans;
}

int32_t main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif

	in(n);
	map<int, int> count;
	for (int i = 0; i < n; i++)
	{
		string s;
		cin >> s;
		int mask = 0;
		for (int j = 0; j < s.length(); j++)
		{
			mask ^= (1 << (s[j] - 'a'));
		}
		count[mask] ++;
	}

	int ans = 0;
	for (auto it : count)
	{
		ans += (it.S * (it.S - 1));  //half in the end

		for (int i = 0; i < 26; i++)
		{
			int reqmask = it.F;
			reqmask ^= (1 << i);
			if (count.count(reqmask) != 0)
				ans += (it.S * count[reqmask]);
		}
	}
	ans /= 2;
	cout << ans << endl;
	return 0;
}
