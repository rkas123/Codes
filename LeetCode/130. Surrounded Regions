class Solution {
public:
    int dirX[4] = {0,0,1,-1};
    int dirY[4] = {1,-1,0,0};
    
    bool isValid(int x,int y,int r,int c){
        if(x<0 || y<0 || x>=r || y>=c)
            return false;
        return true;
    }
    void dfs(int x,int y,vector<vector<bool>> &vis,vector<vector<char>>&board)
    {
        vis[x][y]=true;
        for(int i=0;i<4;i++)
        {
            int X=x+dirX[i];
            int Y=y+dirY[i];
            if(isValid(X,Y,board.size(),board[0].size()) && !vis[X][Y] && board[X][Y]=='O')
            {
                dfs(X,Y,vis,board);
            }
        }
    }
    void solve(vector<vector<char>>& board) {
        int r = board.size();
        int c = board[0].size();
        vector<vector<bool>> vis(r,vector<bool>(c,0));
        for(int i=0;i<r;i++)
        {
            for(int j=0;j<c;j++)
            {
                if(i==0 || i== r-1 || j==0 || j== c-1)
                {
                    if(!vis[i][j] && board[i][j] == 'O')
                        dfs(i,j,vis,board);
                }
            }
        }
        for(int i=0;i<r;i++)
        {
            for(int j=0;j<c;j++)
            {
                if(!vis[i][j] && board[i][j] == 'O')
                    board[i][j] = 'X';
            }
        }
    }
};
