/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {
        ListNode* Prev=NULL;
        ListNode* Next=NULL;
        ListNode* temp=list1;
        ListNode* head=NULL;
        while(a!=0)
        {
            Prev=temp;
            temp=temp->next;
            a--;
            b--;
        }
        while(b!=0){
            temp=temp->next;
            b--;
        }
        Next=temp->next;
        if(Prev==NULL)
        {
            head = list2;
        }
        else
        {
            head=list1;
            Prev->next = list2;
        }
        temp = list2;
        while(temp->next != NULL)
        {
            temp=temp->next;
        }
        temp->next =Next;
        return head;
        
    }
};
