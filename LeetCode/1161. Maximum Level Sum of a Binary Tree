/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        queue<TreeNode*> q;
        q.push(root);
        q.push(NULL);
        int level = 1;
        int ans=-1,maxtillnow =INT_MIN;
        int curr=0;
        while(!q.empty())
        {
            TreeNode* node = q.front();
            q.pop();
            
            if(node == NULL)
            {
                if(curr > maxtillnow)
                {
                    maxtillnow = curr;
                    ans=level;
                }
                curr=0;
                level++;
                if(q.empty())
                {
                    break;
                }
                q.push(NULL);
            }
            else
            {
                curr+=(node->val);
                if(node->left != NULL)
                    q.push(node->left);
                if(node->right != NULL)
                    q.push(node->right);
            }
        
        }
        return ans;
    }
};
