class Solution {
public:
    int maxSumSubmatrix(vector<vector<int>>& matrix, int K) {
        int r= matrix.size();
        int c= matrix[0].size();
        
        for(int i=1;i<c;i++)
        {
            for(int j=0;j<r;j++)
            {
                matrix[j][i]+=matrix[j][i-1];
            }
        }
        
        int ans =INT_MIN;
        
        for(int i=0;i<c;i++)
        {
            for(int j=i;j<c;j++)
            {
                vector<int> v;
                for(int k=0;k<r;k++)
                {
                    int sum = matrix[k][j];
                    if(i-1>=0)
                        sum-=matrix[k][i-1];
                    v.push_back(sum);
                }
                
                set<int> s;
                s.insert(0);
                int curr =0;
                for(auto it: v)
                {
                    curr+=it;
                    int req = curr-K;
                    auto i = s.lower_bound(req);
                    if(i!=s.end())
                    {
                        int val = curr - *(i);
                        ans=max(ans,val);
                    }
                    s.insert(curr);
                }
                

            }
        }
        return ans;
    }
};
