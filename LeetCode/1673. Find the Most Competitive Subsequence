class Solution {
public:
    vector<int> mostCompetitive(vector<int>& nums, int k) {
        stack<int> s;
        int n = nums.size();
        for(int i=0;i<n;i++)
        {
            while(!s.empty() && s.top() > nums[i])
            {
                int newsize = s.size() - 1 + nums.size() - i;
                if(newsize >= k)
                {
                    s.pop();
                }
                else
                {
                    break;
                }
            }
            if(s.size() < k)
                s.push(nums[i]);
        }
        vector<int> ans;
        while(!s.empty())
        {
            ans.push_back(s.top());
            s.pop();
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};
