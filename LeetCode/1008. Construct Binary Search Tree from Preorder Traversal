/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int i;
    TreeNode* Function(int l,int r,vector<int>&preorder)
    {
        if(i>=preorder.size())
            return NULL;
        int val=preorder[i];
        if(val >=l && val<=r)
        {
            TreeNode* node = new TreeNode(val);
            i++;
            node->left = Function(l,val-1,preorder);
            node->right = Function(val+1,r,preorder);
            return node;
        }
        return NULL;
        
    }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        int n = preorder.size();
        if(n==0)
            return NULL;
        i=0;
        TreeNode* head = Function(0,1e9,preorder);
        return head;
    }
};
