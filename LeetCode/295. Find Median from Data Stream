class MedianFinder {
public:
    /** initialize your data structure here. */
    priority_queue<int> maxHeap;
    priority_queue<int,vector<int>,greater<int>> minHeap;
    int size;
    MedianFinder() {
        size = 0;
    }
    
    void addNum(int num) {
        if(maxHeap.size() == 0 || num <= maxHeap.top())
        {
            maxHeap.push(num);
        }
        else
        {
            minHeap.push(num);
        }
        int val =maxHeap.size() - minHeap.size();
        if(val > 1)
        {
            minHeap.push(maxHeap.top());
            maxHeap.pop();
        }
        else if(val < 0)
        {
            maxHeap.push(minHeap.top());
            minHeap.pop();
        }
        
        
        size++;
    }
    
    double findMedian() {
        if(size & 1)
        {
            return maxHeap.top();
        }
        else
        {
            double ans = 1ll*maxHeap.top() + 1ll*minHeap.top();
            return ans/2.0;
        }
    }
};

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder* obj = new MedianFinder();
 * obj->addNum(num);
 * double param_2 = obj->findMedian();
 */
