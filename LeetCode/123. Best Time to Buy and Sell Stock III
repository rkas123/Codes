class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int n= prices.size();
        vector<int> l(n,0);
        vector<int> r(n,0);
        
        l[0]=0;
        int mintillnow = prices[0];
        
        for(int i=1;i<n;i++)
        {
            int pos = prices[i] - mintillnow;
            l[i] = max(pos,l[i-1]);
            mintillnow = min(mintillnow,prices[i]);
        }
        
        int maxtillnow = prices[n-1];
        r[n-1]=0;
        
        for(int i=n-2;i>=0;i--)
        {
            int pos = maxtillnow - prices[i];
            r[i] = max(r[i+1],pos);
            maxtillnow = max(maxtillnow,prices[i]);
        }
        
        int ans=0;
        
        for(int i=0;i<n;i++)
        {
            int pos = l[i];
            if(i+1<n)
            {
                pos+=r[i+1];
            }
            ans=max(ans,pos);
        }
        return ans;
    }
};
