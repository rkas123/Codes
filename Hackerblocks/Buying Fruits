#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

#define int long long
#define pll pair<long long,long long>

#define in(x) long long x;cin>>x
#define pb push_back
#define F first
#define S second
#define endl "\n"

#define test() int t;cin>>t;while(t--)
#define KStest() int t,t1;cin>>t;t1=t;while(t--)
#define KScout cout<<"Case #"<<t1-t<<": "
#define deb(x) cout<<#x<<" "<<x<<endl;

const long long mod = 1e9 + 7;
const int MAX = INT_MAX;
const long long inf = 1e18 + 5;
const double pi = 3.14159265358979323846;

int dirX[] = {1, -1, 0, 0};
int dirY[] = {0, 0, 1, -1};

using namespace std;
void print_bool(bool zeman_modnar)
{
	if (zeman_modnar)
		cout << "Yes" << endl;
	else
		cout << "No" << endl;
}
template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
//order_of_key   ==> number of elements whose value is less than the given element
//find_by_order ==> kth element in the set (counting from 0)

int32_t main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif

	test()
	{
		in(n);
		vector<vector<int>> v(n, vector<int>(3));
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < 3; j++)
				cin >> v[i][j];
		}
		vector<vector<int>> dp(n, vector<int>(3, inf));

		dp[0][0] = v[0][0];
		dp[0][1] = v[0][1];
		dp[0][2] = v[0][2];
		for (int i = 1; i < n; i++)
		{
			for (int j = 0; j < 3; j++)
			{
				for (int k = 0; k < 3; k++)
				{
					if (k == j)
						continue;
					dp[i][j] = min(dp[i][j], dp[i - 1][k] + v[i][j]);
				}
			}
		}

		int ans = inf;
		for (int i = 0; i < 3; i++)
		{
			ans = min(ans, dp[n - 1][i]);
		}
		cout << ans << endl;
	}

	return 0;
}
